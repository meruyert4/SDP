What SOLID Principles i used:
1. Single Responsibility Principle:
    Each class has one job.
2. Open/Closed Principle:
    Extendable without code modification.
3. Liskov Substitution Principle:
    Subclasses replace parent class easily.
4. Dependency Inversion Principle:
    Depend on abstractions, not implementations.


What Design Patterns i used:
1. Abstract Factory Pattern
    to create families of related objects, like buttons and checkboxes


1. Which Creational Design Pattern would be most appropriate for this scenario? Why?
    The Abstract Factory Pattern is the most appropriate for this scenario because it allows you to create families of
    related objects (like buttons and checkboxes) without specifying their concrete classes. It supports the addition of
    new themes easily by introducing new factories without modifying the existing code.