Task 1
You are building an application that processes payments. The application should be able to
handle payments through different methods (e.g., credit cards, PayPal, bank transfers).
Additionally, the payment processing system should support new payment methods without
changing the existing code.
1. Apply SOLID principles to design a flexible and maintainable system for handling
payments.
2. Implement a Java solution that satisfies the following requirements:
o There should be at least two payment
methods: CreditCardPayment and PayPalPayment.
o You should be able to easily add a new payment method
(e.g., BankTransferPayment) without modifying the existing code.
o The system should adhere to the Single Responsibility
Principle, Open/Closed Principle, and other relevant SOLID principles.


Which Solid Principles i added:
1. Single Responsibility Principle:
    Each payment class (CreditCardPayment, PayPalPayment, BankTransferPayment) only handles one type of payment.
2. Open/Closed Principle:
    The new payment can be added without changing the existing code.(by adding new file MethodName.java in payments directory and add its case in main)
3. Interface Segregation Principle:
    interface is simple and don't contain unused things
4. Dependency Inversion Principle:
    the PaymentProcessor class depends on abstract PaymentMethod interface


HOW TO RUN?
1. Open Terminal
2. Navigate to root directory which is SDP
3. run in terminal: javac -d out Payment/payments/*.java Payment/main/Main.java
4. run main: java -cp out main.Main
5. Done


